public void loadExpensesFromDB()
{
String query = "SELECT * FROM EXPENSE ORDER BY EXPENSEID ASC";

int incrementor = 0;
ResultSet exprs = DBCommand(query);
try
{
    while(exprs.next())
    {

String category = exprs.getString(2);
String description = exprs.getString(3);
String status = exprs.getString(4);
Double amountPaid = exprs.getDouble(5);
Double totalAmount = exprs.getDouble(6);
Double remainingBalance = exprs.getDouble(7);
String expDate = exprs.getString(8);
int storeID = exprs.getInt(9);

Expense expTable = new Expense (category, description, status, amountPaid, expDate);
expTable.setStore(storeList.get(storeID));
expTable.setNextID(++incrementor);
obsExpense.clear();
expList.add(expTable);

for (Expense ex: expList)
{
    obsExpense.add(ex);
}

}
}
catch (SQLException e)
{
    System.out.println(e);
}

}

public void loadEmployeesFromDB()
{
String query = "SELECT * FROM EMPLOYEE ORDER BY EMPLOYEEID ASC";

int incrementor = 0;
ResultSet emprs = DBCommand(query);
try
{
    while(emprs.next())
    {

String employFName = emprs.getString(2);
String employLName = emprs.getString(3);
String employEmail = emprs.getString(4);
String employPhoneNumber = emprs.getString(5);
String employAddress = emprs.getString(6);
Double employHourly = emprs.getDouble(7);
String employJobTitle = emprs.getString(8);
Double employTimeWorked = emprs.getDouble(9);
String employType = emprs.getString(10);
String employCategory = emprs.getString(11);
String employUserName = emprs.getString(12);
String employPassword = emprs.getString(13);
int storeID = emprs.getInt(14);

Employee empTable = new Employee(employFName, employLName, employEmail, employPhoneNumber, employAddress, employHourly, employJobTitle, employType, employCategory, storeList.get(storeID));

empTable.setUsername(employUserName);
empTable.setPassword(employPassword);
empTable.setTimeWorked(employTimeWorked);

empTable.setNextID(++incrementor);
obsEmp.clear();
empList.add(empTable);

for (Employee emp: empList)
{
    obsEmp.add(emp);
}
}
}
catch (SQLException ex)
{
    System.out.println(ex.toString());

}
}

public void loadProductsFromDB()
{
String query = "SELECT * FROM PRODUCT ORDER BY PRODUCTID ASC";

int incrementor = 0;
ResultSet prors = DBCommand(query);
try
{
    while (prors.next())
    {

String name = prors.getString(2);
Integer quantity = prors.getInt(3);
Double price = prors.getDouble(4);
Double cost = prors.getDouble(5);
String description = prors.getString(6);
String category = prors.getString(7);
int storeID = prors.getInt(8);
int supplierID = prors.getInt(9);

Product prodTable = new Product (productName, price, cost, quantity, storeList.get(storeID), description, category, suppList.get(supplierID));
prodTable.setNextID(++incrementor);
obsProd.clear();
prodList.add(prodTable);

for (Product prod: prodList)
{
    obsProd.add(prod);
}

}
}
catch (SQLException e)
{
    System.out.println(e);
}

}


public void loadProductOrdersFromDB()
{
String query = "SELECT * FROM PRODUCTORDER ORDER BY PRODUCTORDERID ASC";

int incrementor = 0;
ResultSet pors = DBCommand(query);
try
{
    while(pors.next())
    {

int quantity = pors.getInt(2);
String name = pors.getString(3);
String description = pors.getString(4);
Double unitCost = pors.getDouble(5);
Double unitPrice = pors.getDouble(6);
Double subtotal = pors.getDouble(7);
String deliveryDate = pors.getString(8);
String poDate = pors.getString(9);
String category = pors.getString(10);
int storeID = pors.getInt(11);
int supplierID = pors.getInt(12);

ProductOrder poTable = new ProductOrder(quantity, name, unitCost, unitPrice, subtotal, deliveryDate, poDate, suppList.get(supplierID), storeList.get(storeID), category, poDate);


poTable.setNextID(++incrementor);
obsProdOrder.clear();
prodOrderList.add(poTable);

for (ProductOrder po: prodOrderList)
{
    obsProdOrder.add(po);
}
}
}
catch (SQLException ex)
{
    System.out.println(ex.toString());

}
}

public void loadMembersFromDB()
{
String query = "SELECT * FROM MEMBER ORDER BY MEMBERID ASC";

int incrementor = 0;
ResultSet memrs = DBCommand(query);
try
{
    while(memrs.next())
    {

String fName = memrs.getString(2);
String lName = memrs.getString(3);
String phoneNumber = memrs.getString(4);
String email = memrs.getString(5);

Member memTable = new Member(fName, lName, phoneNumber, email);

memTable.setNextID(++incrementor);
obsMem.clear();
memList.add(memTable);

for (Member mem: memList)
{
    obsMem.add(mem);
}
}
}
catch (SQLException ex)
{
    System.out.println(ex.toString());

}
}

public void loadCustSalesFromDB()
{
String query = "SELECT * FROM CUSTSALE ORDER BY CUSTSALEID ASC";

int incrementor = 0;
ResultSet csrs = DBCommand(query);
try
{
    while(csrs.next())
    {

String saleDate = csrs.getString(2);
int storeID = csrs.getInt(3);
int employeeID = csrs.getInt(4);
int memberID = csrs.getInt(5);
ArrayList<Product> saleProducts = new ArrayList();



CustSale csTable = new CustSale(saleDate, storeList.get(storeID), empList.get(employeeID), memList.get(memberID), saleProducts);

csTable.setNextID(++incrementor);
obsSale.clear();
saleList.add(csTable);

for (CustSale cs: saleList)
{
    obsSale.add(cs);
}
}
}
catch (SQLException ex)
{
    System.out.println(ex.toString());

}
}
